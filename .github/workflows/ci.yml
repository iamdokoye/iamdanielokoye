name: CI Security Pipeline

on:
  pull_request:
    branches: [ main, develop, pipeline ]
  push:
    branches: [ main, develop, pipeline ]

jobs:
  security-and-quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        env:
          NODE_ENV: development
          
      - name: Run npm audit
        run: npm audit --audit-level=moderate
        # This will FAIL the build if moderate+ vulnerabilities exist
        # Use || true if you want it to continue but still show warnings
        # run: npm audit --audit-level=moderate || true
          
      - name: Run ESLint with security rules
        run: npx eslint src --ext .ts,.tsx --max-warnings=0
          
      - name: Run TypeScript compiler check
        run: npx tsc --noEmit
          
      - name: Run tests with coverage
        run: npm test -- --coverage --watchAll=false
          
      - name: Build application
        run: npm run build
        env:
          NODE_ENV: production
          # Use placeholder values for build-time variables
          VITE_API_URL: '/api'
          VITE_APP_VERSION: ${{ github.sha }}
          
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-output
          path: dist/

  # Optional: Add a job that runs Lighthouse CI for performance metrics
  lighthouse-ci:
    runs-on: ubuntu-latest
    needs: security-and-quality
    steps:
      - uses: actions/checkout@v4
      
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-output
          path: dist/
          
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          
      - name: Install Lighthouse CI
        run: npm install -g @lhci/cli@0.12.x
          
      - name: Run Lighthouse CI
        run: |
          lhci autorun --upload.target=temporary-public-storage || echo "Lighthouse completed"
        # Using || echo to prevent failure since this is just for metrics